sequenceDiagram
    participant C as client1
    participant B as broker
    participant S1 as server1 <br /><br />main process
    participant S1W1 as server1 <br /><br />worker1
    participant S1W2 as server1 <br /><br />worker2
    participant S2 as server2 <br /><br />main process
    C->>B: rfc.remote.foo(bar)
    activate B
    note over B: select sever with minimum load
    B->>S1: {function:'foo', args:[bar]}
    activate S1
    B-->>C: {status: 'scheduled'}
    deactivate B
    note over S1: select worker (round robin)
    S1->>S1W1: {function:'foo', args:[bar]}
    activate S1W1
    S1-->>C: {status: 'dispatched'}
    deactivate S1
    S1W1-->>C: {progress: 0.7}
    S1W1->>S1: {result: 'some result'}
    deactivate S1W1
    activate S1
    S1-->>C: {status: 'end'}
    S1->>C: {result: 'some result'}
    deactivate S1